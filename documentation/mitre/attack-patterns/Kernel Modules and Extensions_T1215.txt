MITRE ATT&CK Technique: Kernel Modules and Extensions (T1215)

Description:
Loadable Kernel Modules (or LKMs) are pieces of code that can be loaded and unloaded into the kernel upon demand. They extend the functionality of the kernel without the need to reboot the system. For example, one type of module is the device driver, which allows the kernel to access hardware connected to the system. (Citation: Linux Kernel Programming) When used maliciously, Loadable Kernel Modules (LKMs) can be a type of kernel-mode [Rootkit](https://attack.mitre.org/techniques/T1014) that run with the highest operating system privilege (Ring 0). (Citation: Linux Kernel Module Programming Guide) Adversaries can use loadable kernel modules to covertly persist on a system and evade defenses. Examples have been found in the wild and there are some open source projects. (Citation: Volatility Phalanx2) (Citation: CrowdStrike Linux Rootkit) (Citation: GitHub Reptile) (Citation: GitHub Diamorphine)

Common features of LKM based rootkits include: hiding itself, selective hiding of files, processes and network activity, as well as log tampering, providing authenticated backdoors and enabling root access to non-privileged users. (Citation: iDefense Rootkit Overview)

Kernel extensions, also called kext, are used for macOS to load functionality onto a system similar to LKMs for Linux. They are loaded and unloaded through <code>kextload</code> and <code>kextunload</code> commands. Several examples have been found where this can be used. (Citation: RSAC 2015 San Francisco Patrick Wardle) (Citation: Synack Secure Kernel Extension Broken) Examples have been found in the wild. (Citation: Securelist Ventir)

Detection:
LKMs are typically loaded into <code>/lib/modules</code> and have had the extension .ko ("kernel object") since version 2.6 of the Linux kernel. (Citation: Wikipedia Loadable Kernel Module)

Many LKMs require Linux headers (specific to the target kernel) in order to compile properly. 
These are typically obtained through the operating systems package manager and installed like a normal package.

Adversaries will likely run these commands on the target system before loading a malicious module in order to ensure that it is properly compiled. (Citation: iDefense Rootkit Overview)

On Ubuntu and Debian based systems this can be accomplished by running: <code>apt-get install linux-headers-$(uname -r)</code>

On RHEL and CentOS based systems this can be accomplished by running: <code>yum install kernel-devel-$(uname -r)</code>

Loading, unloading, and manipulating modules on Linux systems can be detected by monitoring for the following commands:<code>modprobe insmod lsmod rmmod modinfo</code> (Citation: Linux Loadable Kernel Module Insert and Remove LKMs)

For macOS, monitor for execution of <code>kextload</code> commands and correlate with other unknown or suspicious activity.

Tactics: persistence
Required Permissions: root
Effective Permissions: Unknown

References:
- Pomerantz, O., Salzman, P.. (2003, April 4). The Linux Kernel Module Programming Guide. Retrieved April 6, 2018. [https://www.tldp.org/LDP/lkmpg/2.4/lkmpg.pdf]
- Pomerantz, O., Salzman, P. (2003, April 4). Modules vs Programs. Retrieved April 6, 2018. [http://www.tldp.org/LDP/lkmpg/2.4/html/x437.html]
- Case, A. (2012, October 10). Phalanx 2 Revealed: Using Volatility to Analyze an Advanced Linux Rootkit. Retrieved April 9, 2018. [https://volatility-labs.blogspot.com/2012/10/phalanx-2-revealed-using-volatility-to.html]
- Kurtz, G. (2012, November 19). HTTP iframe Injecting Linux Rootkit. Retrieved December 21, 2017. [https://www.crowdstrike.com/blog/http-iframe-injecting-linux-rootkit/]
- Augusto, I. (2018, March 8). Reptile - LMK Linux rootkit. Retrieved April 9, 2018. [https://github.com/f0rb1dd3n/Reptile]
- Mello, V. (2018, March 8). Diamorphine - LMK rootkit for Linux Kernels 2.6.x/3.x/4.x (x86 and x86_64). Retrieved April 9, 2018. [https://github.com/m0nad/Diamorphine]
- Chuvakin, A. (2003, February). An Overview of Rootkits. Retrieved April 6, 2018. [http://www.megasecurity.org/papers/Rootkits.pdf]
- Wardle, P. (2015, April). Malware Persistence on OS X Yosemite. Retrieved April 6, 2018. [https://www.virusbulletin.com/uploads/pdf/conference/vb2014/VB2014-Wardle.pdf]
- Wardle, P. (2017, September 8). High Sierra’s ‘Secure Kernel Extension Loading’ is Broken. Retrieved April 6, 2018. [https://www.synack.com/2017/09/08/high-sierras-secure-kernel-extension-loading-is-broken/]
- Mikhail, K. (2014, October 16). The Ventir Trojan: assemble your MacOS spy. Retrieved April 6, 2018. [https://securelist.com/the-ventir-trojan-assemble-your-macos-spy/67267/]
- Wikipedia. (2018, March 17). Loadable kernel module. Retrieved April 9, 2018. [https://en.wikipedia.org/wiki/Loadable_kernel_module#Linux]
- Henderson, B. (2006, September 24). How To Insert And Remove LKMs. Retrieved April 9, 2018. [http://tldp.org/HOWTO/Module-HOWTO/x197.html]

